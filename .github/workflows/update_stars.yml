name: Update GitHub Stars

on:
  # 定时运行
  schedule:
    # 每天运行一次，在UTC时间3点执行
    - cron: '0 3 * * *'

  # 手动触发
  workflow_dispatch:
    inputs:
      fetch_mode:
        description: '获取模式选择'
        required: true
        default: 'incremental'
        type: choice
        options:
          - incremental
          - full
      force_full_fetch:
        description: '强制全量获取所有星标项目（忽略增量更新）'
        required: false
        default: false
        type: boolean

  # 当配置文件更改时运行
  # push:
  #   paths:
  #     - "config.yaml"

jobs:
  update-stars:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 配置Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests

      - name: 创建数据目录
        run: mkdir -p data

      - name: 获取Star项目列表
        run: |
          # 确定获取模式
          if [ "${{ github.event.inputs.fetch_mode }}" = "full" ] || [ "${{ github.event.inputs.force_full_fetch }}" = "true" ] || [ "${{ github.event_name }}" = "schedule" -a ! -f "data/starred_repos_latest.json" ]; then
            echo "开始获取Star项目列表（全量模式）..."
            export FETCH_MODE="full"
          else
            echo "开始获取Star项目列表（增量模式）..."
            export FETCH_MODE="incremental"
          fi
          python src/fetch_stars.py
          echo "Star项目列表获取完成"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_USERNAME: ${{ github.repository_owner }}

      - name: 项目分类和摘要生成
        run: |
          echo "开始项目分类和摘要生成（增量更新模式）..."
          python src/classify.py
          echo "项目分类和摘要生成完成"
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}

      - name: 生成分类文档
        run: |
          echo "开始生成分类文档..."
          python src/generate_category_docs.py
          echo "分类文档生成完成"

      - name: 提交更改
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT || env.GH_PAT }}@github.com/${{ github.repository }}.git
          git add docs/ data/
          git commit -m "自动更新Star项目分类文档 $(date +'%Y-%m-%d')" || echo "没有更改需要提交"
          git push -f
